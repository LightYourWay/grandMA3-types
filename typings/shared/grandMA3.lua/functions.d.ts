/// <reference lib="es2015.iterable" />

/** @noSelfInFile */

/** @noSelf **/
declare interface MA3_v_shared {
    methodA(): Object;
    AddIPAddress(...args: any): any;
    AddonVars(...args: any): any;
    BuildDetails(...args: any): any;
    CheckDMXCollision(...args: any): any;
    CheckFIDCollision(...args: any): any;
    CloseAllOverlays(...args: any): any;
    CloseUndo(...args: any): any;
    Cmd(...args: any): any;
    CmdIndirect(...args: any): any;
    CmdIndirectWait(...args: any): any;
    CmdObj(...args: any): any;
    Confirm(...args: any): any;
    CreateUndo(...args: any): any;
    CurrentExecPage(...args: any): any;
    CurrentProfile(...args: any): any;
    CurrentUser(...args: any): any;
    DataPool(): DataPool;
    DefaultDisplayPositions(...args: any): any;
    DeleteIPAddress(...args: any): any;
    DelVar(...args: any): any;
    DeskLocked(...args: any): any;
    DirList(...args: any): any;
    Echo(...args: any): any;
    ErrEcho(...args: any): any;
    ErrPrintf(...args: any): any;
    Export(...args: any): any;
    ExportCSV(...args: any): any;
    ExportJson(...args: any): any;
    FileExists(...args: any): any;
    FindBestDMXPatchAddr(...args: any): any;
    FindBestFocus(...args: any): any;
    FindNextFocus(...args: any): any;
    FindTexture(...args: any): any;
    FixtureType(...args: any): any;
    FromAddr(...args: any): any;
    GetAttributeByUIChannel(...args: any): any;
    GetAttributeCount(...args: any): any;
    GetAttributeIndex(...args: any): any;
    GetButton(...args: any): any;
    GetChannelFunction(...args: any): any;
    GetChannelFunctionIndex(...args: any): any;
    GetDisplayByIndex(...args: any): any;
    GetDisplayCollect(...args: any): any;
    GetDMXUniverse(...args: any): any;
    GetDMXValue(...args: any): any;
    GetExecutor(...args: any): any;
    GetFocus(...args: any): any;
    GetFocusDisplay(...args: any): any;
    GetPath(...args: any): any;
    GetPathOverrideFor(...args: any): any;
    GetPathSeparator(...args: any): any;
    GetPathType(...args: any): any;
    GetPresetData(...args: any): any;
    GetProgPhaser(...args: any): any;
    GetProgPhaserValue(...args: any): any;
    GetPropertyColumnId(...args: any): any;
    GetRTChannel(...args: any): any;
    GetRTChannelCount(...args: any): any;
    GetSelectedAttribute(...args: any): any;
    GetSubfixture(...args: any): any;
    GetSubfixtureCount(...args: any): any;
    GetTokenName(...args: any): any;
    GetTokenNameByIndex(...args: any): any;
    GetTopModal(...args: any): any;
    GetTopOverlay(...args: any): any;
    GetUIChannel(...args: any): any;
    GetUIChannelCount(...args: any): any;
    GetUIChannelIndex(...args: any): any;
    GetUIChannels(...args: any): any;
    GetUIObjectAtPosition(...args: any): any;
    GetVar(...args: any): any;
    GlobalVars(...args: any): any;
    HandleToInt(...args: any): any;
    HandleToStr(...args: any): any;
    HookObjectChange(...args: any): any;
    HostOS(...args: any): any;
    HostSubType(...args: any): any;
    HostType(...args: any): any;
    Import(...args: any): any;
    IncProgress(...args: any): any;
    IntToHandle(...args: any): any;
    IsObjectValid(...args: any): any;
    Keyboard(...args: any): any;
    KeyboardObj(...args: any): any;
    LoadExecConfig(...args: any): any;
    LoadStorePreferencesFromProfile(...args: any): any;
    MessageBox(...args: any): any;
    Mouse(...args: any): any;
    MouseObj(...args: any): any;
    MultiLanguage: Array<[string, string]>;
    Obj: Obj<any, any>;
    OverallDeviceCertificate(...args: any): any;
    Patch(): Patch;
    PluginVars(...args: any): any;
    PopupInput(...args: any): LuaMultiReturn<[any, any]>;
    Printf(...args: any): any;
    Programmer(...args: any): any;
    ProgrammerPart(...args: any): any;
    Pult(...args: any): any;
    RefreshLibrary(...args: any): any;
    ReleaseType(...args: any): any;
    RenewLayoutHook(...args: any): any;
    Root(): Root;
    SaveExecConfig(...args: any): any;
    SaveStorePreferencesToProfile(...args: any): any;
    Selection(...args: any): any;
    SelectionComponentX(...args: any): any;
    SelectionComponentY(...args: any): any;
    SelectionComponentZ(...args: any): any;
    SelectionCount(...args: any): any;
    SelectionFirst(...args: any): LuaMultiReturn<[any, number, number, number]>;
    SelectionNext(...args: any): LuaMultiReturn<[any, number, number, number]>;
    SelectionNotifyBegin(...args: any): any;
    SelectionNotifyEnd(...args: any): any;
    SelectionNotifyObject(...args: any): any;
    SerialNumber(...args: any): any;
    SetBlockInput(...args: any): any;
    SetColor(...args: any): any;
    SetFilterSettingsTarget(...args: any): any;
    SetLED(...args: any): any;
    SetProgPhaser(...args: any): any;
    SetProgPhaserValue(...args: any): any;
    SetProgress(...args: any): any;
    SetProgressRange(...args: any): any;
    SetProgressText(...args: any): any;
    SetVar(...args: any): any;
    ShowData(): ShowData;
    ShowSettings(...args: any): any;
    StartProgress(...args: any): any;
    StopProgress(...args: any): any;
    StrToHandle(...args: any): any;
    SyncFS(...args: any): any;
    TextInput(...args: any): string;
    Time(...args: any): any;
    Timer(...args: any): any;
    ToAddr(...args: any): any;
    Touch(...args: any): any;
    TouchObj(...args: any): any;
    Unhook(...args: any): any;
    UnhookMultiple(...args: any): any;
    UserVars(...args: any): any;
    /**
     * Returns software version of grandMA3.
     */
    Version(): string;
    WaitModal(...args: any): any;
    WaitObjectDelete(...args: any): any;
}

declare function Version(): string;